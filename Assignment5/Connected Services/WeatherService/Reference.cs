//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment5.WeatherService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherObj", Namespace="http://schemas.datacontract.org/2004/07/WeatherService")]
    [System.SerializableAttribute()]
    public partial class WeatherObj : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Assignment5.WeatherService.WeatherObj.DailyForecastsObj[] DailyForecastsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Assignment5.WeatherService.WeatherObj.DailyForecastsObj[] DailyForecasts {
            get {
                return this.DailyForecastsField;
            }
            set {
                if ((object.ReferenceEquals(this.DailyForecastsField, value) != true)) {
                    this.DailyForecastsField = value;
                    this.RaisePropertyChanged("DailyForecasts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="WeatherObj.DailyForecastsObj", Namespace="http://schemas.datacontract.org/2004/07/WeatherService")]
        [System.SerializableAttribute()]
        public partial class DailyForecastsObj : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string DateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private Assignment5.WeatherService.WeatherObj.DailyForecastsObj.TemperatureObj TemperatureField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Date {
                get {
                    return this.DateField;
                }
                set {
                    if ((object.ReferenceEquals(this.DateField, value) != true)) {
                        this.DateField = value;
                        this.RaisePropertyChanged("Date");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public Assignment5.WeatherService.WeatherObj.DailyForecastsObj.TemperatureObj Temperature {
                get {
                    return this.TemperatureField;
                }
                set {
                    if ((object.ReferenceEquals(this.TemperatureField, value) != true)) {
                        this.TemperatureField = value;
                        this.RaisePropertyChanged("Temperature");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
            
            [System.Diagnostics.DebuggerStepThroughAttribute()]
            [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
            [System.Runtime.Serialization.DataContractAttribute(Name="WeatherObj.DailyForecastsObj.TemperatureObj", Namespace="http://schemas.datacontract.org/2004/07/WeatherService")]
            [System.SerializableAttribute()]
            public partial class TemperatureObj : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
                
                [System.NonSerializedAttribute()]
                private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private Assignment5.WeatherService.WeatherObj.DailyForecastsObj.TemperatureObj.TemperatureMiniObj MaximumField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private Assignment5.WeatherService.WeatherObj.DailyForecastsObj.TemperatureObj.TemperatureMiniObj MinimumField;
                
                public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                    get {
                        return this.extensionDataField;
                    }
                    set {
                        this.extensionDataField = value;
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public Assignment5.WeatherService.WeatherObj.DailyForecastsObj.TemperatureObj.TemperatureMiniObj Maximum {
                    get {
                        return this.MaximumField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.MaximumField, value) != true)) {
                            this.MaximumField = value;
                            this.RaisePropertyChanged("Maximum");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public Assignment5.WeatherService.WeatherObj.DailyForecastsObj.TemperatureObj.TemperatureMiniObj Minimum {
                    get {
                        return this.MinimumField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.MinimumField, value) != true)) {
                            this.MinimumField = value;
                            this.RaisePropertyChanged("Minimum");
                        }
                    }
                }
                
                public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
                
                protected void RaisePropertyChanged(string propertyName) {
                    System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                    if ((propertyChanged != null)) {
                        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                    }
                }
                
                [System.Diagnostics.DebuggerStepThroughAttribute()]
                [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
                [System.Runtime.Serialization.DataContractAttribute(Name="WeatherObj.DailyForecastsObj.TemperatureObj.TemperatureMiniObj", Namespace="http://schemas.datacontract.org/2004/07/WeatherService")]
                [System.SerializableAttribute()]
                public partial class TemperatureMiniObj : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
                    
                    [System.NonSerializedAttribute()]
                    private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
                    
                    [System.Runtime.Serialization.OptionalFieldAttribute()]
                    private string UnitField;
                    
                    [System.Runtime.Serialization.OptionalFieldAttribute()]
                    private float ValueField;
                    
                    public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                        get {
                            return this.extensionDataField;
                        }
                        set {
                            this.extensionDataField = value;
                        }
                    }
                    
                    [System.Runtime.Serialization.DataMemberAttribute()]
                    public string Unit {
                        get {
                            return this.UnitField;
                        }
                        set {
                            if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                                this.UnitField = value;
                                this.RaisePropertyChanged("Unit");
                            }
                        }
                    }
                    
                    [System.Runtime.Serialization.DataMemberAttribute()]
                    public float Value {
                        get {
                            return this.ValueField;
                        }
                        set {
                            if ((this.ValueField.Equals(value) != true)) {
                                this.ValueField = value;
                                this.RaisePropertyChanged("Value");
                            }
                        }
                    }
                    
                    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
                    
                    protected void RaisePropertyChanged(string propertyName) {
                        System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                        if ((propertyChanged != null)) {
                            propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                        }
                    }
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherService.IWeatherService")]
    public interface IWeatherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetWeatherData", ReplyAction="http://tempuri.org/IWeatherService/GetWeatherDataResponse")]
        Assignment5.WeatherService.WeatherObj GetWeatherData(string ZipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetWeatherData", ReplyAction="http://tempuri.org/IWeatherService/GetWeatherDataResponse")]
        System.Threading.Tasks.Task<Assignment5.WeatherService.WeatherObj> GetWeatherDataAsync(string ZipCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherServiceChannel : Assignment5.WeatherService.IWeatherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherServiceClient : System.ServiceModel.ClientBase<Assignment5.WeatherService.IWeatherService>, Assignment5.WeatherService.IWeatherService {
        
        public WeatherServiceClient() {
        }
        
        public WeatherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Assignment5.WeatherService.WeatherObj GetWeatherData(string ZipCode) {
            return base.Channel.GetWeatherData(ZipCode);
        }
        
        public System.Threading.Tasks.Task<Assignment5.WeatherService.WeatherObj> GetWeatherDataAsync(string ZipCode) {
            return base.Channel.GetWeatherDataAsync(ZipCode);
        }
    }
}
